int main() {
	initialize_constant_values();
	ResourceDB resources = resource_manager_initialize();
	Code byteCode = loadByteCode();
	Array<int> ops = byteCode.ops;
	int opsLength = ops.Size();
	Array<Array<int>> opArgs = byteCode.args;
	Array<string> stringArgs = byteCode.stringArgs;
	int i = 0;
	Array<Value> localsStack = new Array<Value>(10);
	Array<int> localsStackSet = new Array<int>(10);
	for (i = localsStack.Size() - 1; i >= 0; i -= 1) {
		localsStack[i] = null;
		localsStackSet[i] = 0;
	}
	StackFrame stack = new StackFrame(0, 1, 0, 0, null, false, null, 0, 0, 1, PostFinallyBehavior.NOTHING, null);
	ExecutionContext executionContext = new ExecutionContext(0, stack, 0, 100, new Array<Value>(100), localsStack, localsStackSet, 1, 0, false, null, false, 0);
	Dictionary<int, ExecutionContext> executionContexts = new Dictionary<int, ExecutionContext>();
	executionContexts[0] = executionContext;
	Core.SetProgramData(new ProgramData(executionContexts, executionContext.id, ops, opArgs, stringArgs, null, new List<string>(), new Dictionary<string, int>(), null, new List<Value>(), new Array<List<Token>>(ops.Size()), 0, null, new List<string>(), null, new List<Dictionary<int, int>>(), null, new List<Dictionary<string, int>>(), 0, false, new Array<ClassInfo>(100), new Array<FunctionInfo>(100), new List<int>(), null, null, -1, new Array<int>(10), resources, null, null, new MagicNumbers(0, 0), null, new Dictionary<int, int>(), new List<object>(), new List<string>(), new List<int>(), new Dictionary<string, int>(), -1, null));
	runInterpreter(executionContext.id);
	return 0;
}

int runInterpreter(int executionContextId) {
	ProgramData p = Core.GetProgramData();
	InterpreterResult result = interpret(executionContextId);
	int status = result.status;
	if (status == InterpreterResultStatus.FINISHED) {
		if (p.executionContexts.Contains(executionContextId)) {
			p.executionContexts.Remove(executionContextId);
		}
	} else {
		if (status == InterpreterResultStatus.FATAL_ERROR) {
			Core.PrintStdOut(result.errorMessage);
		}
	}
	return status;
}

int runInterpreterWithFunctionPointer(Value fpValue, Array<Value> args) {
	ProgramData p = Core.GetProgramData();
	int newId = p.lastExecutionContextId + 1;
	p.lastExecutionContextId = newId;
	List<Value> argList = new List<Value>();
	for (int i = 0; i < args.Size(); i += 1) {
		argList.Add(args[i]);
	}
	Array<Value> locals = new Array<Value>(0);
	Array<int> localsSet = new Array<int>(0);
	Array<Value> valueStack = new Array<Value>(100);
	valueStack[0] = fpValue;
	valueStack[1] = new Value(Types.LIST, argList);
	StackFrame stack = new StackFrame((p.ops.Size() - 2), 1, 0, 0, null, false, null, 0, 0, 1, PostFinallyBehavior.NOTHING, null);
	ExecutionContext executionContext = new ExecutionContext(newId, stack, 2, 100, valueStack, locals, localsSet, 1, 0, false, null, false, 0);
	p.executionContexts[newId] = executionContext;
	return runInterpreter(newId);
}

int noop() {
	return 0;
}

