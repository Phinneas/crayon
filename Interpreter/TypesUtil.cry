function @type('string') getTypeFromId(@type('int') id) {
	switch (id) {
		case Types.NULL: return "null";
		case Types.BOOLEAN: return "boolean";
		case Types.INTEGER: return "integer";
		case Types.FLOAT: return "float";
		case Types.STRING: return "string";
		case Types.LIST: return "list";
		case Types.DICTIONARY: return "dictionary";
		case Types.INSTANCE: return "instance"; // TODO: make this more specific
		case Types.FUNCTION: return "function";
	}
	return null;
}

function @type('bool') isClassASubclassOf(@type('int') subClassId, @type('int') parentClassId) {
	if (subClassId == parentClassId) return true;
	@type('ProgramData') p = $_get_program_data();
	@type('Array<ClassInfo>') classTable = ProgramData$p.classTable;
	@type('int') classIdWalker = subClassId;
	while (classIdWalker != -1) {
		if (classIdWalker == parentClassId) return true;
		@type('ClassInfo') classInfo = $_array_get(classTable, classIdWalker);
		classIdWalker = ClassInfo$classInfo.baseClassId;
	}
	return false;
}
