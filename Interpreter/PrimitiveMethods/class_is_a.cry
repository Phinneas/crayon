
if (argCount != 1) {
	return $_exception(CoreExceptionTypes.INVALID_ARGUMENT, primitiveMethodWrongArgCountError("class isA method", 1, argCount));
}

int1 = ClassValue$classValue.classId;
value = $_array_get(funcArgs, 0);
if (Value$value.type != Types.CLASS) {
	return $_exception(CoreExceptionTypes.INVALID_ARGUMENT, "class isA method requires another class reference.");
}

classValue = $_cast('ClassValue', Value$value.internalValue);
int2 = ClassValue$classValue.classId;

output = VALUE_FALSE;
if (isClassASubclassOf(int1, int2)) {
	output = VALUE_TRUE;
}
