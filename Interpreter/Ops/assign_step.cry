
// row[0] -> name ID
// row[1] -> push the assigned value back to the stack if this is 1.

valueStackSize -= 2;
value = $_array_get(valueStack, valueStackSize + 1); // value to assign
value2 = $_array_get(valueStack, valueStackSize); // target root
nameId = $_array_get(row, 0);

if (Value$value2.type == Types.INSTANCE) {
	objInstance1 = $_cast('ObjectInstance', Value$value2.internalValue);
	classId = ObjectInstance$objInstance1.classId;
	classInfo = $_array_get(classTable, classId);
	intIntDict1 = ClassInfo$classInfo.globalIdToMemberId;
	if ($_dictionary_contains(intIntDict1, nameId)) {
		int1 = $_dictionary_get_guaranteed(intIntDict1, nameId); // member ID
		int2 = $_array_get(ClassInfo$classInfo.functionIds, int1);
		if (int2 == -1) {
			$_array_set(ObjectInstance$objInstance1.members, int1, value);
		} else {
			return $_exception(CoreExceptionTypes.INVALID_ASSIGNMENT, "Cannot override a method with assignment.");
		}
	}
} else {
	return $_exception(CoreExceptionTypes.INVALID_ASSIGNMENT, "Cannot assign to a field on this type.");
}

if ($_array_get(row, 1) == 1) {
	$_array_set(valueStack, valueStackSize, value);
	valueStackSize += 1;
}
