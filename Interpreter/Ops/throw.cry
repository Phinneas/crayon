// This code runs for the 'throw' statement.
// It will pop 1 value off the stack

value = $_array_get(valueStack, valueStackSize - 1);
bool2 = Value$value.type == Types.INSTANCE;
if (bool2) {
	objInstance1 = $_cast('ObjectInstance', Value$value.internalValue);
	if (!isClassASubclassOf(ObjectInstance$objInstance1.classId, MagicNumbers$magicNumbers.coreExceptionClassId)) {
		bool2 = false;
	}
}

if (!bool2) return $_exception(CoreExceptionTypes.INVALID_ARGUMENT, "Thrown value is not an exception."); // meta!

objArray1 = ObjectInstance$objInstance1.nativeData;
intList1 = $_new_list('int');
$_array_set(objArray1, 1, intList1);

// Do not push token if this is from _LIB_CORE_generateException
if (!isPcFromCore(pc)) {
	// This is purely based on TokenData. If there is no token data, then it doesn't matter anyway as this is notably used
	// for printing the human-readable stack trace.
	$_list_push(intList1, pc);
}

ExecutionContext$ec.activeException = value;

import inline 'BubbleException.cry';