// This code runs for the 'throw' statement.
// It will pop 1 value off the stack

intArray1 = $_array_get(esfData, pc);
value = $_array_get(valueStack, valueStackSize - 1);
// TODO: check to verify that the object being thrown is actually an instance of Core.Exception.
objInstance1 = $_cast('ObjectInstance', Value$value.internalValue);
objArray1 = ObjectInstance$objInstance1.nativeData;
bool1 = $_cast('bool', $_array_get(objArray1, 0));
intList1 = $_new_list('int');
$_array_set(objArray1, 1, intList1);
$_list_push(intList1, pc);

ExecutionContext$ec.activeException = value;
ExecutionContext$ec.activeExceptionHandled = false;

// save PC to the stack frame object. If the bubble process doesn't unwind any frames, this will be re-read.
StackFrame$stack.pc = pc;

// Bubble the exception
while (stack != null && (intArray1 == null || bool1)) {
	stack = StackFrame$stack.previous;
	if (stack != null) {
		pc = StackFrame$stack.pc;
		$_list_push(intList1, pc);
		intArray1 = $_array_get(esfData, pc);
	}
}

// Did you get all the way to the top?
if (stack == null) {
	// Exception is uncaught.
	return errorResult("Uncaught exception");
}

// If you got to this point, that means there's a catch or finally.

int1 = $_array_get(intArray1, 0); // get the PC for the exception sorter
if (int1 < pc) {
	// If the exception sorter is before the current PC that means you're throwing from the catch itself and
	// so it shouldn't catch itself. Go directly to the finally instead.
	int1 = $_array_get(intArray1, 1);
}

pc = int1 - 1;
StackFrame$stack.pc = pc;
localsStackOffset = StackFrame$stack.localsStackOffset;
localsStackSetToken = StackFrame$stack.localsStackSetToken;
ExecutionContext$ec.stackTop = stack;
StackFrame$stack.postFinallyBehavior = PostFinallyBehavior.NOTHING;
ExecutionContext$ec.currentValueStackSize = valueStackSize;
