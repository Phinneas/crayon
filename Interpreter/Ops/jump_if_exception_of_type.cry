/*
	Jumps to a PC offset if the active exception matches any of the types.
	Also assigns the exception to the catch variable (but only if it gets matched)

	row[0] -> offset
	row[1] -> variable ID of exception
	row[2+] -> list of class ID's to check
*/


value = ExecutionContext$ec.activeException;
objInstance1 = $_cast('ObjectInstance', Value$value.internalValue);
int1 = ObjectInstance$objInstance1.classId;
for (i = $_array_length(row) - 1; i >= 2; i -= 1) {
	if (isClassASubclassOf(int1, $_array_get(row, i))) {
		i = 0;
		pc += $_array_get(row, 0);

		// Assign the exception to the catch variable
		int2 = $_array_get(row, 1);
		if (int2 > -1) { // -1 indicates that the exception is not assigned to a variable
			int1 = localsStackOffset + int2;
			$_array_set(localsStack, int1, value);
			$_array_set(localsStackSet, int1, localsStackSetToken);
		}
	}
}
