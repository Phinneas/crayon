struct Code {
	@type('Array<int>') ops,
	@type('Array<Array<int>>') args,
	@type('Array<string>') stringArgs
}

// Dictionaries in Crayon can only have 3 types of keys: integers, strings, and objects
// Dictionaries can hold any of these, but only hold one type at a time
struct DictImpl {
	keyLookup,
	valueLookup,
	@type('int') size,
	@type('int') keyType
}

struct ProgramData {
	@type('StackFrame') stackTop,
	ops,
	args,
	stringArgs,
	specialCache,
	identifiers,
	inv_identifiers,
	literalTable,
	classTable,
	classMethods,
	tickerRegistered,
	tokenData,
	@type('int') userCodeStart,
	@type('Dictionary<int, Value>') globalVarScope,
	sourceCode,
	integerSwitchLookups,
	stringSwitchLookups,
	primitiveMethodLookup,
	@type('int') instanceCounter
}

struct StackFrame {
	@type('int') pc,
	@type('Dictionary<int, Value>') locals,
	@type('Stack<Value>') valueStack,
	@type('Array<Value>') args,
	@type('StackFrame') previous,
	@type('bool') returnValueUsed,
	@type('Value') objectContext
}

struct Token {
	@type('int') lineIndex,
	@type('int') colIndex,
	@type('int') fileId
}

struct Value {
	@type('int') type,
	@type('object') internalValue
}
