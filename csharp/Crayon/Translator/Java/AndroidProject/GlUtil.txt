package %%%PACKAGE%%%;

import android.graphics.Bitmap;

import javax.microedition.khronos.opengles.GL10;

final class GlUtil {
    private GlUtil() {}

    public static int forceLoadTexture(Bitmap bitmap) {
        throw new RuntimeException("TODO");
    }

    public static void beginPolygon() {
        throw new RuntimeException("TODO");
    }

    public static void beginQuads() {
        throw new RuntimeException("TODO");
    }

    public static void glBindTexture(int textureId) {
        throw new RuntimeException("TODO");
    }

    public static void color4(int r, int g, int b, int a) {
        throw new RuntimeException("TODO");
    }

    public static void glDisableTexture2D() {
        throw new RuntimeException("TODO");
    }

    public static void glEnableTexture2D() {
        throw new RuntimeException("TODO");
    }

    public static void glEnd() {
        throw new RuntimeException("TODO");
    }

    public static int getMaxTextureSize() {
        return 1024; // need to change this. Probably safe to hardcode to 2048?
    }

    public static void prepareDrawPipeline(Object glUncast) {
        GL10 gl = (GL10) glUncast;
        gl.glClear(GL10.GL_COLOR_BUFFER_BIT | GL10.GL_DEPTH_BUFFER_BIT);
        gl.glClearColor(0f, 0f, 0f, 1f);
        gl.glEnable(GL10.GL_BLEND);
        gl.glBlendFunc(GL10.GL_SRC_ALPHA, GL10.GL_ONE_MINUS_SRC_ALPHA);
        gl.glMatrixMode(GL10.GL_MODELVIEW);
    }

    public static void glTexCoord2(double x, double y) {
        throw new RuntimeException("TODO");
    }

    public static void glVertex2(double x, double y) {
        throw new RuntimeException("TODO");
    }
}
