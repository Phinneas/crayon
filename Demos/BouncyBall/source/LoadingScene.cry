class LoadingScene : AbstractScene {
	constructor() : base() {
		this.phase = 'begin';
		this.progress = 0.0;
	}
	
	function update(events, pressed_keys) {
		switch (this.phase) {
			case 'begin':
				$gfx_image_sheet_load('everything');
				this.phase = 'downloading';
				break;
			
			case 'downloading':
				this.progress = $gfx_image_sheet_load_progress('everything');
				if ($gfx_image_sheet_loaded('everything')) {
					this.phase = 'done';
				}
				break;
			
			case 'done':
				this.next = new FadeTransitionScene(this, new TitleScene());
				break;
			
			default:
				break;
		}
	}
	
	function render(rc) {
		$gfx_fill_screen(0, 0, 0);
		bar_width = WIDTH * 3 / 4;
		bar_height = HEIGHT / 20;
		left = (WIDTH - bar_width) / 2;
		top = (HEIGHT - bar_height) / 2;
		$gfx_draw_rectangle(left, top, bar_width, bar_height, 100, 100, 100, 255);
		$gfx_draw_rectangle(left + 2, top + 2, bar_width - 4, bar_height - 4, 0, 0, 0, 255);
		inner_width = bar_width - 8;
		inner_height = bar_height - 8;
		inner_left = left + 4;
		inner_top = top + 4;
		progress_width = $floor(inner_width * this.progress);
		color = [0, 80, 200];
		$gfx_draw_rectangle(inner_left, inner_top, progress_width, inner_height, color[0] + 40, color[1] + 40, color[2] + 40, 255);
		$gfx_draw_rectangle(inner_left, inner_top + 3, progress_width, inner_height - 3, color[0], color[1], color[2], 255);
		$gfx_draw_rectangle(inner_left, inner_top + 6, progress_width, inner_height - 6, color[0] / 2, color[1] / 2, color[2] / 2, 255);
	}
}
