import GFX;
import Math;

class Sprite {

	field id;
	field x;
	field y;
	field dx = 0.0;
	field dy = 0.0;
	field vx = 0;
	field vy = 0;
	field vx_decay = 0;
	field ground;
	field x_accelerated = false;

	constructor(id, x, y) {
		this.id = id;
		this.x = x + 0.0;
		this.y = y + 0.0;
	}
	
	function accelerate_x(is_right) {
		this.x_accelerated = true;
		if (is_right) {
			this.vx += .05;
			if (this.vx > .3) this.vx = 0.3;
		} else {
			this.vx -= .05;
			if (this.vx < -.3) this.vx = -0.3;
		}
		this.dx += this.vx;
	}
	
	function update(playscene) {
		if (!this.x_accelerated && this.vx != 0) {
			if (this.vx > 0) {
				this.vx -= .05;
				if (this.vx < 0) {
					this.vx = 0;
				}
			} else if (this.vx < 0) {
				this.vx += .05;
				if (this.vx > 0) {
					this.vx = 0;
				}
			}
			this.dx += this.vx;
		}
		this.x_accelerated = false;
		
		map = playscene.map;
		grid = map.grid;
		cols = map.width;
		rows = map.height;
		
		top_epsilon = 0.1;
		bottom_epsilon = 0.001;
		
		newx = this.x + this.dx;
		bottom = this.y;
		top = this.y - 1;
		
		col = Math.floor(newx);
		row_bottom = Math.floor(bottom - bottom_epsilon);
		row_top = Math.floor(top + top_epsilon);
		
		if (col >= 0 && col < cols && row_top >= 0 && row_bottom < rows) {
			tile1 = grid[col][row_top];
			tile2 = grid[col][row_bottom];
			if ((tile1 == null || !tile1.template.blocking) &&
				(tile2 == null || !tile2.template.blocking)) {
				this.x = newx;
			}
		}
		
		dy = this.dy + this.vy;
		new_y = this.y + dy;
		top = new_y - 1 + top_epsilon;
		bottom = new_y + bottom_epsilon;
		x = this.x;
		
		col = Math.floor(x);
		row_top = Math.floor(top);
		row_bottom = Math.floor(bottom);
		
		old_ground = this.ground;
		this.ground = null;
		
		if (col >= 0 && col < cols && row_top >= 0 && row_bottom < rows) {
			tile_top = grid[col][row_top];
			tile_bottom = grid[col][row_bottom];
			if ((tile_top == null || !tile_top.template.blocking) &&
				(tile_bottom == null || !tile_bottom.template.blocking)) {
				this.y = this.y + dy;
			} else {
				if (dy < 0) {
					if (tile_top != null && tile_top.template.blocking) {
						this.vy = 0; // head bonk!
					} else {
						this.y = this.y + dy;
					}
				} else if (dy > 0) {
					if (tile_bottom != null && tile_bottom.template.blocking) {
						this.ground = tile_bottom;
						this.y = tile_bottom.row * 1.0;
					} else {
						this.y = this.y + dy;
					}
				} else {
					// do nothing
				}
			}
		}
		
		if (this.ground == null && this.vy >= 0) {
			new_ground = null;
			col = Math.floor(this.x);
			row = Math.floor(this.y + .05);
			
			if (row < rows) {
				tile = grid[col][row];
				if (tile != null && tile.template.blocking) {
					new_ground = tile;
				}
			}
			
			this.ground = new_ground;
		}
		
		if (this.ground != null) {
			this.y = this.ground.row * 1.0;
			this.vy = 0;
		} else {
			this.vy += .05;
			if (this.vy > .9) this.vy = .9;
			else if (this.vy < -.9) this.vy = -.9;
		}
		
		this.dx = 0;
		this.dy = 0;
	}
	
	function render(rc, cx, cy) {
		radius = 16;
		rx = Math.floor(this.x * 32) - cx;
		ry = Math.floor(this.y * 32 - radius) - cy;
		GFX.Draw.ellipse(rx - radius, ry - radius, radius * 2, radius * 2, 255, 0, 0);
	}
}
