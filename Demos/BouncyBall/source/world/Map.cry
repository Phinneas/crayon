
class Map {
	constructor(id) {
		this.id = id;
		raw_data = $resource_read_text('levels/' + id + '.txt').trim();
		lines = raw_data.split('\n');
		width = lines[0].trim().length;
		height = lines.length;
		grid = make_grid(width, height);
		
		TILE_STORE.initialize();
		
		start_loc = null;
		for (y = 0; y < height; ++y) {
			line = lines[y].trim();
			for (x = 0; x < width; ++x) {
				id = line[x];
				
				if (id == 'O') {
					start_loc = [x, y];
					id = '.';
				}
				
				if (id == '.') {
					tile = null;
				} else {
					template = TILE_STORE.get(id);
					tile = new Tile(template, x, y);
				}
				grid[x][y] = tile;
			}
		}
		this.grid = grid;
		this.width = width;
		this.height = height;
		this.start_loc = start_loc;
	}
	
	function render(rc, cx, cy) {
		for (y = 0; y < this.height; ++y) {
			for (x = 0; x < this.width; ++x) {
				tile = this.grid[x][y];
				if (tile != null) {
					tt = tile.template;
					if (tt.is_static) {
						$gfx_blit_image(tt.image, x * 32 - cx, y * 32 - cy);
					}
				}
			}
		}
	}
}