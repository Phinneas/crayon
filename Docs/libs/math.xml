<documentation>
	<library name="Math">
		<description>
			Library of various math functions and utilities.
		</description>
		<namespace name="Math">
			<function name="abs">
				<arg name="value" type="number">Any number</arg>
				<description>
					Returns the absolute value of a number.
				</description>
			</function>
			<function name="arccos">
				<arg name="ratio" type="number">Any number between -1 and 1.</arg>
				<description>
					Returns the inverse cosine of the given ratio.
				</description>
			</function>
			<function name="arcsin">
				<arg name="ratio" type="number">Any number between -1 and 1.</arg>
				<description>
					Returns the inverse sine of the given ratio.
				</description>
			</function>
			<function name="arctan">
				<arg name="yComponent" type="number">Any value. Represents the Y component of the vector.</arg>
				<arg name="optionalXComponent" type="number" default="1.0">Any value. Represents the X component of the vector. If missing, 1 is used and the arctangent is essentially computed with just the Y value.</arg>
				<description>
					Returns the inverse tangent of either the given ratio (1 argument present) or the vector (2 arguments present). 
				</description>
			</function>
			<function name="cos">
				<arg name="theta" type="number">Any theta value</arg>
				<description>
					Returns the cosine of the given theta.
				</description>
			</function>
			<function name="ensureRange">
				<arg name="value" type="number">Any numerical value.</arg>
				<arg name="lowerBound" type="number">The lower bound of the range.</arg>
				<arg name="upperBound" type="number">The upper bound of the raange.</arg>
				<description>
					Ensures that the first argument is within the bounds of the latter two arguments.
					If it is, it will return the original number. Otherwise, it'll return the lower or upper bound values accordingly.
					Note that this does not change the type of the value. Integers will stay integers and floats will stay floats.
					e.g. ensureRange(1, 2.0, 4.0) is 2.0, ensureRange(3, 2.0, 4.0) is 3, ensureRange(1.0, 2, 4) is 2, etc.
				</description>
			</function>
			<function name="floor">
				<arg name="number" type="number">Any number</arg>
				<description>
					Returns the integer value that is less than or equal to the current number. e.g. floor(5) is 5, floor(3.14) is 3, floor(-2.1) is -3. 
				</description>
			</function>
			<function name="max">
				<arg name="num1" type="number">Any numerical value.</arg>
				<arg name="num2" type="number">Any numerical value.</arg>
				<description>
					Returns the maximum value between the two numerical values.
				</description>
			</function>
			<function name="min">
				<arg name="num1" type="number">Any numerical value.</arg>
				<arg name="num2" type="number">Any numerical value.</arg>
				<description>
					Returns the minimum value between the two numerical values.
				</description>
			</function>
			<function name="sin">
				<arg name="theta" type="number">Any theta value</arg>
				<description>
					Returns the sine of the given theta.
				</description>
			</function>
			<function name="tan">
				<arg name="theta" type="number">Any theta value</arg>
				<description>
					Returns the tangent of the given theta.
				</description>
			</function>
		</namespace>
	</library>
</documentation>