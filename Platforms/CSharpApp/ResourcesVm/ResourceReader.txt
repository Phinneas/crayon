using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;

namespace Interpreter
{
    public static class ResourceReader
    {
        public static string CbxDirectory { get; set; }

        public static string ReadTextFile(string path)
        {
            if (path == "Resources/ImageSheetManifest.txt")
            {
                path = "res/image_sheet_manifest.txt";
            }
            else
            {
                path = "res/txt/" + path;
            }
            IList<byte> bytes = ReadBytes(path);
            if (bytes == null) return null;
            bool hasBom = bytes.Count >= 3 && bytes[0] == 239 && bytes[1] == 187 && bytes[2] == 191;
            StringBuilder output = new StringBuilder(bytes.Count);
            output.Append(bytes.Skip<byte>(hasBom ? 3 : 0).Select<byte, char>(b => (char)b).ToArray<char>());
            return output.ToString();
        }

        public static Bitmap ReadImageFile(string path)
        {
            if (path.StartsWith("Resources/"))
            {
                // TODO: remove this and instead unify CsharpApp and Vm resource layouts.
                path = path.Replace("Resources/", "res/img/");
            }
            IList<byte> data = ReadBytes(path);
            if (data == null)
            {
                return null;
            }
            return (Bitmap)Bitmap.FromStream(new System.IO.MemoryStream(data.ToArray()));
        }

        public static List<byte> ReadBytes(string path)
        {
            string fullPath = System.IO.Path.Combine(ResourceReader.CbxDirectory, path);
            if (System.IO.File.Exists(fullPath))
            {
                return new List<byte>(System.IO.File.ReadAllBytes(fullPath));
            }
            return null;
        }
    }
}
