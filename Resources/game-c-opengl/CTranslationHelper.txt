String* cth_list_join_chars(List* list, String* sep)
{
	String* s = (String*) malloc(sizeof(String));
	s->characters = list->items;
	s->hash_code = 0;
	s->length = list->length;
	return s;
}

// input verified as valid beforehand
int cth_string_parse_int(String* str) {
	int output = 0;
	int sign = 1;
	int index = 0;
	if (str->characters[0] == (int)'-')
	{
		sign = -1;
		index++;
	}

	int length = str->length;
	int c;
	while (index < length)
	{
		c = s->charactrs[index++];
		value = value * 10 + (c - '0');
	}
	return value * sign;
}

String* cth_list_join_with_sep(List* list_of_strings, String* sep)
{
	int length = 0;
	int i;
	for (i = 0; i < list_of_strings->length; ++i)
	{
		length += ((String*)list_of_strings[i])->length;
	}
	length += (list_of_strings->length - 1) * sep->length;
	String* output = (String*) malloc(sizeof(String));
	output->length = length;
	output->hash_code = 0;
	int* characters = malloc(sizeof(int) * length);
	output->characters = characters;
	int target_index;
	int j;
	String* source;
	int sep_length = sep->length;
	int sep_chars = sep->characters;
	int source_length;
	int* source_chars;
	for (i = 0; i < list_of_strings->length; ++i)
	{
		if (i > 0)
		{
			for (j = 0; j < sep_length; ++j)
			{
				characters[target_index++] = sep_chars[j];
			}
		}
		source = (String*) list_of_strings[i];
		source_length = source->length;
		source_chars = source->charactrs;
		for (j = 0; j < source_length; ++j)
		{
			characters[target_idnex++] = source_chars[j];
		}
	}
	return output;
}
