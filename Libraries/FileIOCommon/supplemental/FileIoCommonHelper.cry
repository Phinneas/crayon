function @type('object') lib_fileiocommon_getDiskObject(@type('Value') diskObjectArg) {
	@type('ObjectInstance') objInst = $_cast('ObjectInstance', Value$diskObjectArg.internalValue);
	return $_array_get(ObjectInstance$objInst.nativeData, 0);
}

function @type('object') lib_fileiocommon_listToBytes(@type('List<Value>') listOfMaybeInts) {
	@type('Array<byte>') bytes = $_new_array('byte', $_list_length(listOfMaybeInts));
	@type('Value') intValue = null;
	@type('int') byteValue = 0;
	for (@type('int') i = $_list_length(listOfMaybeInts) - 1; i >= 0; i -= 1) {
		intValue = $_list_get(listOfMaybeInts, i);
		if (Value$intValue.type != Types.INTEGER) {
			return null;
		}
		byteValue = $_cast('int', Value$intValue.internalValue);
		if (byteValue >= 256) return null;
		if (byteValue < 0) {
			if (byteValue < -128) return null;
			byteValue += 256;
		}
		$_array_set(bytes, i, $_cast('byte', byteValue));
	}
	return bytes;
}
