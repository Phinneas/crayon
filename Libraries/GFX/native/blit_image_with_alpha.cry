/*
	args[0] -> image object instance (trusted)
	args[1] -> x
	args[2] -> y
	args[3] -> alpha
*/
import inline "FrameworkFunctions/4_arg.cry";

object1 = libGfxGetImgFromInstance(arg1); // trusted source

if (Value$arg2.type != Types.INTEGER || Value$arg3.type != Types.INTEGER) {
	lib_func_error_occurred = true;
	lib_func_error_message = "$gfx_blit_image coordinates must be integers.";
} else if (Value$arg4.type != Types.INTEGER) {
	lib_func_error_occurred = true;
	lib_func_error_message = "$gfx_blit_image_with_alpha alpha value must be an integer.";
} else {
	int1 = $_cast('int', Value$arg4.internalValue);
	if (int1 < 0 || int1 > 255) {
		lib_func_error_occurred = true;
		lib_func_error_message = "$gfx_blit_image_with_alpha alpha value must be between 0 and 255.";
	} else {
		if (%%%IS_OPEN_GL_BASED%%%) {
			glDrawImageWithAlpha($_cast('Image', object1), $_cast('int', Value$arg2.internalValue), $_cast('int', Value$arg3.internalValue), int1);
		} else {
			$_lib_gfx_blitImageAlpha($_cast('Image', object1), $_cast('int', Value$arg2.internalValue), $_cast('int', Value$arg3.internalValue), int1);
		}
	}
}
