// $gfx_image_sheet_load_progres(idOrIds)
import inline "InterpreterSource/FrameworkFunctions/1_arg.cry";

stringList = toStringList(arg1, stringList);
if (stringList == null) {
	lib_func_error_occurred = true;
	lib_func_error_message = "$image_sheet_load_progress argument must either be a string or a list of strings.";
} else {
	int1 = 0; // files loaded
	int2 = 0; // total files to load

	for (i = 0; i < $_array_length(stringList); i += 1) {
		string1 = $_array_get(stringList, i);
		if (getSheetErrorCode(string1) > 0) {
			int2 = 0; // this function should return 1.0
			i = $_array_length(stringList);
		} else {
			int3 = getNumTilesLoaded(string1);
			if (int3 == -1) {
				i = $_array_length(stringList);
				lib_func_error_occurred = true;
				lib_func_error_message = "'" + string1 + "' is not a valid image sheet.";
			} else {
				int1 += int3;
				int2 += getNumTiles(string1);
			}
		}
	}

	if (!lib_func_error_occurred) {
		if (int2 == 0) {
			output = VALUE_FLOAT_ONE;
		} else {
			output = buildFloat($_unsafe_float_division(1.0 * int1, int2));
		}
	}
}
