/*
	arg 1: game width
	arg 2: game height
	arg 3: screen width
	arg 4: screen height
	
	All arguments are verified to be positive integers.
*/
import inline "FrameworkFunctions/4_arg.cry";

int1 = $_cast('int', Value$arg1.internalValue);
int2 = $_cast('int', Value$arg2.internalValue);
int3 = $_cast('int', Value$arg3.internalValue);
int4 = $_cast('int', Value$arg4.internalValue);

prepareToSuspend(ec, stack, valueStackSize, pc);

$_lib_game_initialize_screen(int1, int2, int3, int4, ExecutionContext$ec.id);

// It's possible that the above call will block entirely and not yield until the game is closed.
// It will, however, simply call the same executionContextId and the stack information will be updated.
// In which case, the following return will not have any effect when suddenly re-invoked.
return suspendInterpreter();
