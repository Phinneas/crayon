/*
	arg 1: GraphicsTexture original instance
	arg 2: GraphicsTexture new instance (no native data yet)
	arg 3: boolean: flip horizontally
	arg 4: boolean: flip vertically
	arg 5: original GrahpicsTextureResource
	arg 6: new GrahpicsTextureResource (atlas-based platforms only) or null. Need to initialize this.
	
	one or both flips will be true.
	For texture atlas platforms, simply swap around the texture bounds.
	For other platforms, create a mutated copy of the image but maintain the (0, 0, 1, 1) texture bounds.
*/
import inline "FrameworkFunctions/6_arg.cry";

objInstance1 = $_cast('ObjectInstance', Value$arg1.internalValue);
objInstance2 = $_cast('ObjectInstance', Value$arg2.internalValue);
objArray1 = ObjectInstance$objInstance1.nativeData;
objArray2 = $_new_array('object', 7);
ObjectInstance$objInstance2.nativeData = objArray2;
bool1 = $_cast('bool', Value$arg3.internalValue);
bool2 = $_cast('bool', Value$arg4.internalValue);

i = 6;
while (i >= 0) {
	$_array_set(objArray2, i, $_array_get(objArray1, i));
	i -= 1;
}

if (%%%LIB_GRAPHICS_USES_TEXTURE_ATLAS%%%) {
	/*
		objArray1[1] -> texture left
		objArray1[2] -> texture top
		objArray1[3] -> texture right
		objArray1[4] -> texture button
	*/
	if (bool1) {
		object1 = $_array_get(objArray1, 1);
		$_array_set(objArray2, 1, $_array_get(objArray2, 3));
		$_array_set(objArray2, 3, object1);
	}
	if (bool2) {
		object1 = $_array_get(objArray1, 2);
		$_array_set(objArray2, 2, $_array_get(objArray2, 4));
		$_array_set(objArray2, 4, object1);
	}
	
} else {
	// objArray2 is the nativeData of the GraphicsTexture. It's [0] element must be set to the nativeData of the 
	// the new GraphicsTextureResource, which will now be objArray1.
	objArray1 = $_new_array('object', 6);
	$_array_set(objArray2, 0, objArray1);
	// we no longer need objArray2 (the native data of the GraphicsTexture).
	// set objArray2 now to the nativeData of the original GraphicsTextureResource.
	objInstance1 = $_cast('ObjectInstance', Value$arg5.internalValue);
	objArray2 = ObjectInstance$objInstance1.nativeData;
	// and then copy it to the new one.
	for (i = 5; i >= 0; i -= 1) {
		$_array_set(objArray1, i, $_array_get(objArray2, i));
	}
	// Now set the new native data to the new GraphicsTextureResource in arg6
	objInstance1 = $_cast('ObjectInstance', Value$arg5.internalValue);
	ObjectInstance$objInstance1.nativeData = objArray1;
	
	// This is the actual image instance
	object1 = $_array_get(objArray1, 3);
	// Do the flip.
	object1 = $_lib_graphics_flipTexture(object1, bool1, bool2);
	// And apply it back to the nativeData.
	$_array_set(objArray1, 3, object1);
}

output = arg2;
