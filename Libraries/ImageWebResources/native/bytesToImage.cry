/*
	arg1: HttpResponse object. nativeData[0] contains a byte array
	arg2: an output vector
		list[1] -> ImageResources.ImageNativeData instance. Must populate the nativeData here.
			nativeData[0] -> platform image instance
			nativeData[1] -> width
			nativeData[2] -> height
		list[2] -> image width
		list[3] -> image height
	
	returns true on success.
*/

import inline "FrameworkFunctions/2_arg.cry";

// Get the byte array
objInstance1 = $_cast('ObjectInstance', Value$arg1.internalValue);
object1 = $_array_get(ObjectInstance$objInstance1.nativeData, 0); // byte[]

// Get the output vector.
list1 = $_cast('List<Value>', Value$arg2.internalValue);

// Get the ImageNativeData object from the output vector and get its nativeData ready, which will
// serve as the output vector for $_lib_imagewebresources_byteToImage
value = $_list_get(list1, 0);
objArray1 = $_new_array('object', 3);
objInstance1 = $_cast('ObjectInstance', Value$value.internalValue);
ObjectInstance$objInstance1.nativeData = objArray1;

// Pass the nativeData and the byte array and create an image object and calculate its width.
if ($_lib_imagewebresources_bytesToImage(object1, objArray1)) {
	$_list_set(list1, 1, buildInteger($_cast('int', $_array_get(objArray1, 1))));
	$_list_set(list1, 2, buildInteger($_cast('int', $_array_get(objArray1, 2))));
	output = VALUE_TRUE;
} else {
	output = VALUE_FALSE;
}
