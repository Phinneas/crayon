namespace Core {
	function assert(condition, message = null) {
		return $$lib_core_assert(condition, message);
	}

	function chr(value) {
		return $$lib_core_chr(value);
	}

	function current_time() {
		return $$lib_core_current_time();
	}

	function ord(value) {
		return $$lib_core_ord(value);
	}

	function parseFloat(value) {
		return $$lib_core_parse_float(value);
	}

	function parseInt(value) {
		return $$lib_core_parse_int(value);
	}

	function print(value) {
		return $$lib_core_print(value);
	}

	function typeof(value) {
		return $$lib_core_typeof(value);
	}

	function _LIB_CORE_list_sort_by_key(fp, list) {
		if (list.length > 1) {
			k = [];
			for (t : list) {
				k.add(fp(t));
			}
			$$lib_core_sort_list(list, k);
		}
	}

	function _LIB_CORE_list_map(fp, list) {
		output = [];
		for (t : list) {
			output.add(fp(t));
		}
		return output;
	}

	function _LIB_CORE_list_filter(fp, list) {
		output = [];
		for (t : list) {
			if (fp(t) == true) {
				output.add(t);
			}
		}
		return output;
	}
}
