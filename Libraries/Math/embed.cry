namespace Math {

	const PI = 3.141592653589793238462;
	const E = 2.718281828459045235360;

	function arccos(ratio) {
		// range is checked in translated code.
		return $$lib_core_arccos(ratio);
	}

	function arcsin(ratio) {
		// range is checked in translated code.
		return $$lib_core_arcsin(ratio);
	}

	function arctan(ratio_or_y, x = 1) {
		return $$lib_core_arctan(ratio_or_y, x);
	}

	function cos(theta) {
		return $$lib_core_cos(theta);
	}

	function floor(value) {
		return $$lib_core_floor(value);
	}

	function sign(num) {
		return $$lib_core_sign(num);
	}

	function sin(theta) {
		return $$lib_core_sin(theta);
	}

	function tan(theta) {
		return $$lib_core_tan(theta);
	}

	// Despite the fact that the following functions are relatively simple and could be implemented in
	// non-translated code, they are relatively common and the native code should be inlined if possible.
	function abs(value) {
		return $$lib_core_abs(value);
	}
	function max(a, b) {
		return $$lib_core_max(a, b);
	}
	function min(a, b) {
		return $$lib_core_min(a, b);
	}
	function ensureRange(value, minBound, maxBound) {
		return $$lib_core_ensureRange(value, minBound, maxBound);
	}
}
