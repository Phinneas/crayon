
// $gamepad_descriptor_guess(device, magic_string);
import inline "InterpreterSource/FrameworkFunctions/2_arg.cry";

/*
	The magic strings refer to a button on a canonical XBox 360 controller or similar layouts.
	Possible values:
	"axis1:x:positive" -> axis1 can be axis2, x can be y, positive can be negative
	"dpad:x:positive" --> only 1 dpad, same swaps for x and positive
	"button:a" --> all buttons include a, b, x, y, start, back
	"bumper:left" --> left can also be right
	"trigger:left" --> left can also be right

	Based on the device, a guess is made for which pushy descriptor most likely represents the given physical input.
	These are ideally passed into the $gamepad_bind... functions so that gamepads work without configuration, or at least decently enough to get
	to the reconfigure menu without needing to resort to the keyboard or mouse.

*/

string1 = gamepadDescriptorGuess(arg1, arg2, intOutParam);
int1 = $_array_get(intOutParam, 0);

if (int1 == 0) {
	output = buildString(string1);
} else {
	lib_func_error_occurred = true;
	lib_func_error_message = "$gamepad_descriptor_guess encountered an unknown error.";
	if (int1 == 1) lib_func_error_message = "$gamepad_descriptor_guess requires a gamepad device as its first argument.";
	if (int1 == 2) lib_func_error_message = "$gamepad_descriptor_guess requires a string as its first argument.";
	if (int1 == 3) lib_func_error_message = "The given string was not a recognized physical input ID. See documentation for a list of possible values.";
}
