function @type('int') lib_audio_stop(@type('object') sound, @type('bool') reset) {
	$_audio_stop(sound);
	return 0;
}

function @type('int') lib_audio_sfx_stop(
		@type('object') channel,
		@type('object') resource,
		@type('int') resourceId,
		@type('bool') isActivelyPlaying,
		@type('bool') hardStop) {
	$_audio_sfx_stop(channel, resource, resourceId, isActivelyPlaying, hardStop);
	return 0;
}

function @type('int') lib_audio_sfx_get_state(@type('object') channel, @type('object') sfxResource, @type('int') resourceId) {
	return $_audio_sfx_get_state(channel, sfxResource, resourceId);
}

function @type('int') lib_audio_sfx_set_pan(@type('object') channel, @type('object') sfxResource, @type('double') pan) {
	return 0;
}

function @type('int') lib_audio_sfx_set_volume(@type('object') channel, @type('object') sfxResource, @type('double') volume) {
	return 0;
}

function @type('int') lib_audio_sfx_unpause(@type('object') channel, @type('object') sfxResource, @type('double') volume, @type('double') pan) {
	$_audio_sfx_resume(channel, sfxResource, volume, pan);
	return 0;
}

function @type('int') lib_audio_sfx_launch(
		@type('object') sfxResource,
		@type('Array<object>') channelNativeDataOut,
		@type('double') volume,
		@type('double') pan) {

	@type('object') channel = $_audio_sfx_play(sfxResource, volume, pan);
	if (channel == null) {
		return 0;
	}
	$_array_set(channelNativeDataOut, 0, channel);
	return 1;
}

function @type('int') lib_audio_load_sfx_from_resource(@type('ObjectInstance') obj, @type('string') path) {
	@type('object') sfx = $_audio_read_local_sound_resource(path);
	ObjectInstance$obj.nativeData = $_new_array('object', 1);
	$_array_set(ObjectInstance$obj.nativeData, 0, sfx);
	return 1;
}

function @type('Value') lib_audio_is_music_playing() {
	if ($_audio_music_is_playing()) {
		return VALUE_TRUE;
	}
	return VALUE_FALSE;
}

function @type('int') lib_audio_music_play(
		@type('ObjectInstance') musicObject,
		@type('bool') isResource,
		@type('string') path,
		@type('double') startingVolume,
		@type('bool') isLoop) {
	$_audio_music_set_volume(startingVolume);

	@type('object') nativeObject = null;
	if (ObjectInstance$musicObject.nativeData != null) {
		nativeObject = $_array_get(ObjectInstance$musicObject.nativeData, 0);
	}

	if (isResource) {
		$_audio_music_play_resource(nativeObject, path, isLoop);
	} else {
		if (!$_audio_music_verify_file_exists(path)) {
			return -1;
		}
		$_audio_music_play_file(nativeObject, path, isLoop);
	}

	return 0;
}

function @type('bool') lib_audio_music_load_from_resource(@type('ObjectInstance') musicObj, @type('string') path) {
	@type('object') nativeMusicObject = $_audio_music_load_from_resource(path);
	if (nativeMusicObject != null) {
		ObjectInstance$musicObj.nativeData = $_new_array('object', 1);
		$_array_set(ObjectInstance$musicObj.nativeData, 0, nativeMusicObject);
		return true;
	}
	return false;
}
