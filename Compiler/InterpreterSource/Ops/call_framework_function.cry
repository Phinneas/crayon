
// TODO: the types for these values must be verified.
// The arg count is verified to be in the correct range at compile time.
// However if there are optional arguments, the number of args used in this call are located in row[2]
output = VALUE_NULL;
switch ($_array_get(row, 0)) {
	case %%%FF_IO_CURRENT_DIRECTORY%%%: $_comment('$io_current_directory'); import inline "InterpreterSource/FrameworkFunctions/io_current_directory.cry"; break;
	case %%%FF_IO_DIRECTORY_LISTING%%%: $_comment('$io_directory_list'); import inline "InterpreterSource/FrameworkFunctions/io_directory_list.cry"; break;
	case %%%FF_IO_FILE_READ_TEXT%%%: $_comment('$io_file_read_text'); import inline "InterpreterSource/FrameworkFunctions/io_file_read_text.cry"; break;
	case %%%FF_IO_FILE_WRITE_TEXT%%%: $_comment('$io_file_write_text'); import inline "InterpreterSource/FrameworkFunctions/io_file_write_text.cry"; break;
	case %%%FF_IO_IS_PATH_DIRECTORY%%%: $_comment('$io_is_path_directory'); import inline "InterpreterSource/FrameworkFunctions/io_is_path_directory.cry"; break;
	case %%%FF_IO_PATH_EXISTS%%%: $_comment('$io_path_exists'); import inline "InterpreterSource/FrameworkFunctions/io_path_exists.cry"; break;
	case %%%FF_IO_PATH_JOIN%%%: $_comment('$io_path_join'); import inline "InterpreterSource/FrameworkFunctions/io_path_join.cry"; break;
	case %%%FF_USER_DATA_DELETE_DIRECTORY%%%: $_comment('$user_data_delete_directory'); import inline "InterpreterSource/FrameworkFunctions/user_data_delete_directory.cry"; break;
	case %%%FF_USER_DATA_DELETE_FILE%%%: $_comment('$user_data_delete_file'); import inline "InterpreterSource/FrameworkFunctions/user_data_delete_file.cry"; break;
	case %%%FF_USER_DATA_DIRECTORY_LISTING%%%: $_comment('$user_data_directory_listing'); import inline "InterpreterSource/FrameworkFunctions/user_data_directory_listing.cry"; break;
	case %%%FF_USER_DATA_FILE_READ_TEXT%%%: $_comment('$user_data_file_read_text'); import inline "InterpreterSource/FrameworkFunctions/user_data_file_read_text.cry"; break;
	case %%%FF_USER_DATA_FILE_WRITE_TEXT%%%: $_comment('$user_data_file_write_text'); import inline "InterpreterSource/FrameworkFunctions/user_data_file_write_text.cry"; break;
	case %%%FF_USER_DATA_IS_PATH_DIRECTORY%%%: $_comment('$user_data_is_path_directory'); import inline "InterpreterSource/FrameworkFunctions/user_data_is_path_directory.cry"; break;
	case %%%FF_USER_DATA_MAKE_DIRECTORY%%%: $_comment('$user_data_make_directory'); import inline "InterpreterSource/FrameworkFunctions/user_data_make_directory.cry"; break;
	case %%%FF_USER_DATA_PATH_EXISTS%%%: $_comment('$user_data_path_exists'); import inline "InterpreterSource/FrameworkFunctions/user_data_path_exists.cry"; break;
	default:
		return killExecution(stack, pc, "Invalid framework function: " + $_string_cast_weak($_array_get(row, 0))); 
		break;
}
if ($_array_get(row, 1) == 1) {
	import inline "InterpreterSource/ValueStackCapacityCheck.cry";
	$_array_set(valueStack, valueStackSize, output);
	valueStackSize += 1;
}
