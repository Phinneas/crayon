/*
	Error codes:
		0 - everything is fine
		1 - Cannot set content length without a body
		2 - Cannot set content type without a body
*/

function @type('object') lib_http_make_request(
	@type('string') method,
	@type('string') url,
	@type('string') body,
	@type('List<Value>') headerNames,
	@type('List<Value>') headerValues,
	@type('string') defaultUserAgent,
	@type('Array<int>') errorCodeOut) {
	
	$_array_set(errorCodeOut, 0, 0);

	@type('HttpRequest') request = new HttpRequest(0, null, null, null);
	@type('List<string>') filteredHeaderNames = $_new_list('string');
	@type('List<string>') filteredHeaderValues = $_new_list('string');
	@type('string') userAgent = defaultUserAgent;
	@type('string') contentType = null;
	@type('string') contentLength = null;
	@type('bool') noContent = (body == null) || $_string_equals("GET", method);
	if (!noContent) {
		contentLength = $_string_cast_strong($_string_length(body));
	}

	// User-Agent, Content-Type, and Content-Length get special handling.
	for (@type('int') i = 0; i < $_list_length(headerNames); i += 1) {
		@type('Value') v = $_list_get(headerNames, i);
		@type('string') headerName = $_cast('string', Value$v.internalValue);
		v = $_list_get(headerValues, i);
		@type('string') headerValue = $_cast('string', Value$v.internalValue);
		@type('string') canonicalName = $_string_upper(headerName);
		if ($_string_equals("USER-AGENT", canonicalName)) {
			userAgent = headerValue;
		} else if ($_string_equals("CONTENT-LENGTH", canonicalName)) {
			if (noContent) {
				$_array_set(errorCodeOut, 0, 1);
				return null;
			}
			// do nothing. content length is automatically set as body.length
		} else if ($_string_equals("CONTENT-TYPE", canonicalName)) {
			if (noContent) {
				$_array_set(errorCodeOut, 0, 2);
				return null;
			}
			contentType = headerValue;
		} else {
			$_list_push(filteredHeaderNames, headerName);
			$_list_push(filteredHeaderValues, headerValue);
		}
	}

	// TODO: move this native function to library code
	$_http_request(
		request,
		method,
		url,
		body,
		userAgent,
		contentType,
		contentLength,
		filteredHeaderNames,
		filteredHeaderValues);
	return request;
}

function @type('bool') handleHttpResponse(
	@type('HttpRequest') request, 
	@type('int') statusCode, 
	@type('string') status,
	@type('string') body, 
	@type('Dictionary<string, Array<string>>') headers) {

	HttpRequest$request.statusCode = statusCode;
	HttpRequest$request.status = status;
	HttpRequest$request.headers = headers;
	HttpRequest$request.body = body;

	if (HttpRequest$request.headers == null) {
		// The native call should never let this happen.
		// TODO: figure out why it is.
		HttpRequest$request.headers = $_new_dictionary('string', 'Array<string>');
	}

	return false;
}

function @type('Value') lib_http_convert_response_to_list(@type('ObjectInstance') httpReqObj) {
	@type('Array<Object>') nd = ObjectInstance$httpReqObj.nativeData;
	if (nd == null) return VALUE_NULL;
	@type('HttpRequest') req = $_cast('HttpRequest', $_array_get(nd, 0));
	if (req == null) return VALUE_NULL;
	if (HttpRequest$req.statusCode < 100) return VALUE_NULL;
	
	@type('List<Value>') values = $_new_list('Value');
	$_list_push(values, buildInteger(HttpRequest$req.statusCode));
	$_list_push(values, buildString(HttpRequest$req.status));
	@type('string') body = HttpRequest$req.body;
	if (body == null) {
		$_list_push(values, VALUE_NULL);
	} else {
		$_list_push(values, buildString(body));
	}
	@type('List<Value>') headerNames = $_new_list('Value');
	@type('Array<string>') headers = $_dictionary_get_keys('string', HttpRequest$req.headers);
	@type('Array<string>') headerCanonical = $_new_array('string', $_array_length(headers));
	@type('DictImpl') canonicalLookup = createEmptyDictionary(Types.STRING);
	@type('int') i = 0;
	for (i = 0; i < $_array_length(headers); i += 1) {
		@type('string') name = $_array_get(headers, i);
		@type('Value') nameValue = buildString(name);
		$_list_push(headerNames, nameValue);
		@type('string') canonical = $_string_lower(name);
		$_array_set(headerCanonical, i, canonical);
		setStringKvpToDict(canonicalLookup, canonical, nameValue);
	}
	@type('DictImpl') valueLookupDict = createEmptyDictionary(Types.STRING);
	@type('Value') valueLookup = new Value(Types.DICTIONARY, valueLookupDict);
	@type('int') j = 0;
	for (i = 0; i < $_array_length(headers); i += 1) {
		@type('string') headerName = $_array_get(headers, i);
		@type('Array<string>') convertToList = $_dictionary_get_guaranteed(HttpRequest$req.headers, headerName);
		@type('List<Value>') convertedList = $_new_list('Value');
		setStringKvpToDict(valueLookupDict, $_string_lower(headerName), new Value(Types.LIST, convertedList));
		for (j = 0; j < $_array_length(convertToList); j += 1) {
			$_list_push(convertedList, buildString($_array_get(convertToList, j)));
		}
	}

	$_list_push(values, new Value(Types.DICTIONARY, canonicalLookup));
	$_list_push(values, valueLookup);
	$_list_push(values, new Value(Types.LIST, headerNames));

	return new Value(Types.LIST, values);
}
