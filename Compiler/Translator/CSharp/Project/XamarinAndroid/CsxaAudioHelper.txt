using System;

namespace %%%PROJECT_ID%%%
{
	public static class CsxaAudioHelper
    {
        private static double musicVolume = 1.0;
        private static Android.Media.MediaPlayer currentMusic = null;

        public static void AudioStop(object resource)
        {
            throw new NotImplementedException();
        }

        public static void AudioSoundStop(object channel, object resource, int resourceId, bool isActivelyPlaying, bool hardStop)
        {
            throw new NotImplementedException();
        }

        public static void AudioSoundResume(object channel, object sfxResource, double volume, double pan)
        {
            throw new NotImplementedException();
        }

        public static int AudioSoundGetState(object channel, object sfxResource, int resourceId)
        {
            throw new NotImplementedException();
        }

        public static object AudioSoundPlay(object sfxResource, double volume, double pan)
        {
            throw new NotImplementedException();
        }

        public static object GetSoundInstance(string path)
        {
            throw new NotImplementedException();
        }
        
        public static bool AudioIsMusicPlaying()
        {
            return currentMusic != null && currentMusic.IsPlaying;
        }

        public static void MusicSetVolume(double ratio)
        {
            musicVolume = Math.Max(0.0, Math.Min(ratio, 1.0));
            if (currentMusic != null)
            {
                currentMusic.SetVolume((float) musicVolume, (float) musicVolume);
            }
        }

        public static void AudioMusicPlayResource(object resource, bool isLoop)
        {
            Android.Media.MediaPlayer mediaPlayer = (Android.Media.MediaPlayer)resource;
            mediaPlayer.Start();
            mediaPlayer.Looping = isLoop;
            currentMusic = mediaPlayer;
        }

        public static bool AudioMusicVerifyFileExists(string path)
        {
            throw new NotImplementedException();
        }

        public static object MusicLoadFromResource(string path)
        {
            int resourceId = ResourceReader.GetRawResourceId(path);
            if (resourceId == -1) return null;
            return Android.Media.MediaPlayer.Create(ResourceReader.MainActivity, resourceId);
        }
	}
}
